<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Blog Grids | Play Tailwind</title>
  <link rel="shortcut icon" href="/images/favicon.png" type="image/x-icon" />
  <link rel="stylesheet" href="/css/animate.css" />
  <link rel="stylesheet" href="/css/tailwind.css" />
  
  <!-- ==== WOW JS ==== -->
  <script src="/js/wow.min.js"></script>
  <script>
    new WOW().init();
  </script>
</head>

<body>
  <!-- ====== Navbar Section Start -->
  <%- include('partials/navbar') %>
  <!-- ====== Navbar Section End -->

  <!-- ====== Banner Section Start -->
  <div class="relative z-10 overflow-hidden pt-[120px] pb-[60px] md:pt-[130px] lg:pt-[160px] dark:bg-dark">
    <div
      class="absolute bottom-0 left-0 w-full h-px bg-gradient-to-r from-stroke/0 via-stroke dark:via-dark-3 to-stroke/0">
    </div>
    <%- include('partials/ads') %>
    <div class="container">
      <div class="flex flex-wrap items-center -mx-4">
        <div class="w-full px-4">
          <div class="text-center">
            <h1 class="mb-4 text-3xl font-bold text-dark dark:text-white sm:text-4xl md:text-[40px] md:leading-[1.2]">
              Blog Grid</h1>
            <p class="mb-5 text-base text-body-color dark:text-dark-6">
              There are many variations of passages of Lorem Ipsum available.
            </p>

            <ul class="flex items-center justify-center gap-[10px]">
              <li>
                <a href="/index"
                  class="flex items-center gap-[10px] text-base font-medium text-dark dark:text-white">
                  Home
                </a>
              </li>
              <li>
                <a href="javascript:void(0)" class="flex items-center gap-[10px] text-base font-medium text-body-color">
                  <span class="text-body-color dark:text-dark-6"> / </span>
                  Blog Grid
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- ====== Banner Section End -->

  <!-- ====== Blog Section Start -->
  <section class="pt-20 pb-10 lg:pt-[80px] lg:pb-20 dark:bg-dark">
    <div class="container">
      <form id="searchForm" action="/blogs" method="GET" class="flex flex-wrap items-center justify-center gap-4 pb-20 w-full md:w-[80%] mx-auto">
        <input type="text" name="search" placeholder="Search blogs..." value="<%= search %>"
          class="w-full md:w-auto px-5 py-3 text-base transition bg-transparent border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-6 placeholder:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none" />
        <select name="filter" class="w-full md:w-auto px-5 py-3 text-base transition bg-transparent border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none">
          <option value="" <%= filter === '' ? 'selected' : '' %>>All</option>
          <option value="latest" <%= filter === 'latest' ? 'selected' : '' %>>Latest</option>
          <option value="oldest" <%= filter === 'oldest' ? 'selected' : '' %>>Oldest</option>
          <option value="popular" <%= filter === 'popular' ? 'selected' : '' %>>Most Popular</option>
        </select>
        
        <select name="category" class="w-full md:w-auto px-5 py-3 text-base transition bg-transparent border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none">
          <option value="">All Categories</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>" <%= selectedCategory === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
          <% }); %>
        </select>

        <select name="timeRange" class="w-full md:w-auto px-5 py-3 text-base transition bg-transparent border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none">
          <option value="">All Time</option>
          <option value="24h" <%= timeRange === '24h' ? 'selected' : '' %>>Last 24 Hours</option>
          <option value="week" <%= timeRange === 'week' ? 'selected' : '' %>>Last Week</option>
          <option value="month" <%= timeRange === 'month' ? 'selected' : '' %>>Last Month</option>
          <option value="year" <%= timeRange === 'year' ? 'selected' : '' %>>Last Year</option>
        </select>

        <div class="relative w-full md:w-auto">
          <button type="button" id="dropdownButton" class="w-full md:w-auto px-5 py-3 text-base text-white transition duration-300 ease-in-out border rounded-md cursor-pointer border-primary bg-primary hover:bg-blue-dark">Tags</button>
      
          <div id="dropdown" class="hidden h-[160px] overflow-auto flex-col gap-2 mt-4 absolute z-10 p-2 bg-white border border-stroke rounded-md shadow-lg scrollbar-hide">
            <% tags.forEach(tag => { %>
              <label class="flex items-center">
                <input type="checkbox" name="tags" value="<%= tag._id %>" <%= selectedTags.includes(tag._id.toString()) ? 'checked' : '' %> />
                <span class="ml-2"><%= tag.name %></span>
              </label>
            <% }); %>
          </div>
        </div>
      
        <button type="submit" class="w-full md:w-auto px-5 py-3 text-base text-white transition duration-300 ease-in-out border rounded-md cursor-pointer border-primary bg-primary hover:bg-blue-dark">Apply</button>
      </form>
      <div id="blogContainer" class="flex flex-wrap -mx-4">
        <%- include('partials/blogs', { blogs: blogs }) %>
        
      </div>
    </div>

    <div id="paginationContainer" class="mt-8 text-center wow fadeInUp" data-wow-delay=".2s">
      <%- include('partials/pagination', {
        currentPage: currentPage,
        hasNextPage: hasNextPage,
        hasPreviousPage: hasPreviousPage,
        nextPage: nextPage,
        previousPage: previousPage,
        lastPage: lastPage,
        oldUrl: '/blogs?'
      }) %>
    </div>
  </section>
  <!-- ====== Blog Section End -->

  <!-- ====== Footer Section Start -->
  <%- include('partials/footer') %>
  <!-- ====== Footer Section End -->

  <!-- ====== Back To Top Start -->
  <a href="javascript:void(0)"
    class="back-to-top fixed bottom-8 right-8 left-auto z-[999] hidden h-10 w-10 items-center justify-center rounded-md bg-primary text-white shadow-md transition duration-300 ease-in-out hover:bg-dark">
    <span class="mt-[6px] h-3 w-3 rotate-45 border-t border-l border-white"></span>
  </a>
  <!-- ====== Back To Top End -->

  <!-- ====== Made With Button Start -->
  <!-- <a target="_blank" rel="nofollow noopener"
    class="inline-flex items-center gap-[10px] py-2 px-[14px] rounded-lg bg-white dark:bg-dark-2 shadow-2 fixed bottom-8 left-4 sm:left-9 z-[999]"
    href="https://tailgrids.com/">
    <span class="text-base font-medium text-dark-3 dark:text-dark-6">
      Made with
    </span>
    <span class="block w-px h-4 bg-stroke dark:bg-dark-3"></span>
    <span class="block max-w-[88px] w-full">
      <img src="/images/brands/tailgrids.svg" alt="tailgrids" class="dark:hidden">
      <img src="/images/brands/tailgrids-white.svg" alt="tailgrids" class="hidden dark:block">
    </span>
  </a> -->
  <!-- ====== Made With Button End -->

  <!-- ====== All Scripts -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
  <script src="/js/main.js"></script>
  <script>
    document.getElementById('dropdownButton').addEventListener('click', function() {
      var dropdown = document.getElementById('dropdown');
      if (dropdown.classList.contains('hidden')) {
        dropdown.classList.remove('hidden');
        dropdown.classList.add('flex');
      } else {
        dropdown.classList.add('hidden');
      }
    });
    
  </script>
  <script>
      function attachBookmarkEvents() {
      const bookmarkButtons = document.querySelectorAll('.bookmarkButton');

      bookmarkButtons.forEach(button => {
        button.addEventListener('click', function() {
          const blogId = this.getAttribute('data-blog-id');
          const isBookmarked = this.classList.contains('bg-primary');
          const url = isBookmarked ? `/bookmark/${blogId}` : `/bookmark/${blogId}`;
          const method = isBookmarked ? 'DELETE' : 'POST';

          $.ajax({
            url: url,
            method: method,
            success: function(response) {
              if (response.success) {
                if (isBookmarked) {
                  button.classList.remove('bg-primary');
                } else {
                  button.classList.add('bg-primary');
                }
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: response.message,
                  customClass: {
                    popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
                    title: 'text-[#1a202c] dark:text-gray-100',
                    confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
                    cancelButton: 'bg-[#e53e3e] text-white dark:bg-red-600'
                  }
                });
              }
            },
            error: function(xhr) {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: xhr.responseJSON.message,
                customClass: {
                  popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
                  title: 'text-[#1a202c] dark:text-gray-100',
                  confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
                  cancelButton: 'bg-[#e53e3e] text-white dark:bg-red-600'
                }
              });
            }
          });
        });
      });
    }

    $(document).ready(function () {
    // Xử lý submit form tìm kiếm
    attachBookmarkEvents();
      $('#searchForm').on('submit', function (event) {
        event.preventDefault(); // Ngăn hành vi mặc định của form

        const url = $(this).attr('action') || '/blogs';
        let data = $(this)
          .serializeArray()
          .filter(field => field.name !== 'page' && field.value.trim() !== '');
        
        console.log(data);
        $.ajax({
          url: url,
          method: 'GET',
          data: $.param(data),
          success: function (response) {
            if (response.blogsHtml && response.paginationHtml) {
              $('#blogContainer').html(response.blogsHtml);
              $('#paginationContainer').html(response.paginationHtml);

              const newUrl = `${url}?${$.param(data)}`;
              window.history.pushState({ path: newUrl }, '', newUrl);
              attachBookmarkEvents();
              
            } else {
              console.error('Unexpected response format:', response);
            }
          },
          error: function (xhr) {
            console.error('Error:', xhr);
            alert('Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại!');
          },
        });
      });

      // Xử lý click vào nút phân trang
      $('#paginationContainer').on('click', 'a', function (event) {
        event.preventDefault(); // Ngăn hành vi mặc định của link

        const href = $(this).attr('href'); // Lấy giá trị href
        const url = new URL(href, window.location.origin); // Tạo URL đầy đủ
        const page = url.searchParams.get('page'); // Lấy giá trị của tham số "page"
        const formData = $('#searchForm')
          .serializeArray()
          .filter(field => field.name !== 'page' && field.value.trim() !== ''); // Loại bỏ trường page nếu đã tồn tại

        if (page > 1)
          formData.push({ name: 'page', value: page });

        $.ajax({
          url: $('#searchForm').attr('action') || '/blogs',
          method: 'GET',
          data: $.param(formData),
          success: function (response) {
            if (response.blogsHtml && response.paginationHtml) {
              $('#blogContainer').html(response.blogsHtml);
              $('#paginationContainer').html(response.paginationHtml);
              const newUrl = `${url.pathname}?${$.param(formData)}`;
              window.history.pushState({ path: newUrl }, '', newUrl);
              attachBookmarkEvents();
            } else {
              console.error('Unexpected response format:', response);
            }
          },
          error: function (xhr) {
            console.error('Error:', xhr);
            alert('Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại!');
          },
        });      
      });

      // Xử lý sự kiện popstate để tải lại các đối tượng cũ khi người dùng nhấn nút "Quay lại" hoặc "Tiến tới"
      window.addEventListener('popstate', function (event) {
      const path = event.state ? event.state.path : window.location.href;

      if (!window.location.href.includes('/blogs')) {
        // Chuyển hướng đến /blogs nếu đường dẫn không phải là /blogs
        window.location.replace('/blogs');
      } else {
        // Thực hiện AJAX để tải nội dung động
        $.ajax({
          url: path,
          method: 'GET',
          success: function (response) {
            if (response.blogsHtml && response.paginationHtml) {
              $('#blogContainer').html(response.blogsHtml);
              $('#paginationContainer').html(response.paginationHtml);
              attachBookmarkEvents();
            } else {
              console.error('Unexpected response format:', response);
            }
          },
          error: function (xhr) {
            console.error('Error:', xhr);
            alert('Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại!');
          },
        });
      }
    });
    });
  </script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const bookmarkButtons = document.querySelectorAll('.bookmarkButton');

    bookmarkButtons.forEach(button => {
      button.addEventListener('click', function() {
        const blogId = this.getAttribute('data-blog-id');
        const isBookmarked = this.classList.contains('bg-primary');
        const url = isBookmarked ? `/bookmark/${blogId}` : `/bookmark/${blogId}`;
        const method = isBookmarked ? 'DELETE' : 'POST';

        $.ajax({
          url: url,
          method: method,
          success: function(response) {
            if (response.success) {
              if (isBookmarked) {
                button.classList.remove('bg-primary');
              } else {
                button.classList.add('bg-primary');
              }
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: response.message,
                customClass: {
                  popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
                  title: 'text-[#1a202c] dark:text-gray-100',
                  confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
                  cancelButton: 'bg-[#e53e3e] text-white dark:bg-red-600'
                }
              });
            }
          },
          error: function(xhr) {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: xhr.responseJSON.message,
              customClass: {
                popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
                title: 'text-[#1a202c] dark:text-gray-100',
                confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
                cancelButton: 'bg-[#e53e3e] text-white dark:bg-red-600'
              }
            });
          }
        });
      });
    });
  });
</script>
</body>

</html>




