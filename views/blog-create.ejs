<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Blog Create | Play Tailwind</title>
  <link rel="shortcut icon" href="/images/favicon.png" type="image/x-icon" />
  <link rel="stylesheet" href="/css/animate.css" />
  <link rel="stylesheet" href="/css/tailwind.css" />
  <link rel="stylesheet" href="/css/ckeditor.css" />

  <!-- sweetalert2 -->
  <!-- jquery -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> 
  <!-- ==== WOW JS ==== -->
  <script src="/js/wow.min.js"></script>
  <script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/classic/ckeditor.js"></script>
  <script>
    new WOW().init();
  </script>
</head>

<body>
  <!-- ====== Navbar Section Start -->
  <%- include('partials/navbar') %>
  <!-- ====== Navbar Section End -->

  <!-- ====== Banner Section Start -->
  <div class="relative z-10 overflow-hidden pt-[120px] pb-[60px] md:pt-[130px] lg:pt-[160px] dark:bg-dark">
    <div
      class="absolute bottom-0 left-0 w-full h-px bg-gradient-to-r from-stroke/0 via-stroke dark:via-dark-3 to-stroke/0">
    </div>
    <div class="container">
      <div class="flex flex-wrap items-center -mx-4">
        <div class="w-full px-4">
          <div class="text-center">
            <h1 class="mb-4 text-3xl font-bold text-dark dark:text-white sm:text-4xl md:text-[40px] md:leading-[1.2]">
              Blog Create Page</h1>
            <p class="mb-5 text-base text-body-color dark:text-dark-6">
              There are many variations of passages of Lorem Ipsum available.
            </p>

            <ul class="flex items-center justify-center gap-[10px]">
              <li>
                <a href="../index"
                  class="flex items-center gap-[10px] text-base font-medium text-dark dark:text-white">
                  Home
                </a>
              </li>
              <li>
                <a href="javascript:void(0)" class="flex items-center gap-[10px] text-base font-medium text-body-color">
                  <span class="text-body-color dark:text-dark-6"> / </span>
                  Create
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- ====== Banner Section End -->

  <!-- ====== CreateBlog Section Start -->
  <section class="pt-20 pb-10 lg:pt-[80px] lg:pb-20 dark:bg-dark">
    <div class="container">
      <form id="createForm" action="/blog-create" method="post" class="flex flex-col flex-wrap items-center justify-center gap-4 pb-20 w-full md:w-[80%] mx-auto" enctype="multipart/form-data">
        <input type="text" name="title" id="title" placeholder="Title" 
          class="w-full md:w-full px-5 py-3 text-base transition border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-700 placeholder:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none" />
        <span id="titleError" class="text-red-500 hidden">Title is required</span>
  
        <div class="flex items-center gap-4 self-start">
          <button type="button" onclick="document.getElementById('imageInput').click()" class="px-9 py-9 rounded border dark:border-bg-white dark:border-bg-dark max-w-[250px] flex flex-row gap-1 justify-center items-center text-dark-700 dark:text-white hover:text-primary hover:border-primary transition">
            <input type="file" id="imageInput" name="image" accept="image/*" class="hidden" onchange="previewImage(event)" />
            <svg class="w-8 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M149.1 64.8L138.7 96 64 96C28.7 96 0 124.7 0 160L0 416c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-256c0-35.3-28.7-64-64-64l-74.7 0L362.9 64.8C356.4 45.2 338.1 32 317.4 32L194.6 32c-20.7 0-39 13.2-45.5 32.8zM256 192a96 96 0 1 1 0 192 96 96 0 1 1 0-192z"/></svg>
            <span>Thumbnail</span>
          </button>
          <img id="imagePreview" src="#" alt="Image Preview" class="hidden w-32 h-32 object-cover rounded-md border border-stroke dark:border-dark-3" />
        </div>
        <span id="imageError" class="text-red-500 hidden">Image is required</span>
  
        <div class="w-full border border-stroke dark:border-dark-3 rounded-md">
          <textarea name="content" id="editor" placeholder="Content" 
          class="w-full h-full md:w-full md:h-full px-5 py-3 text-base transition border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-700 placeholder:text-dark-6 focus:border-primary dark:focus:border-primary focus-visible:shadow-none"></textarea>
        </div>
        <span id="contentError" class="text-red-500 hidden">Content is required</span>
  
        <select name="category" id="category" class="w-full md:w-full px-5 py-3 text-base transition border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-700 focus:border-primary dark:focus:border-primary focus-visible:shadow-none">
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
        <span id="categoryError" class="text-red-500 hidden">Category is required</span>
  
        <div id="tagTodoList" class="w-full md:w-full px-5 py-3 text-base transition border rounded-md outline-none border-stroke dark:border-dark-3 text-body-color dark:text-dark-700 focus:border-primary dark:focus:border-primary focus-visible:shadow-none">
          <input type="text" id="tagInput" placeholder="Add a tag" class="w-full px-3 py-2 mb-2 border rounded-md" />
          <ul id="tagList" class="flex flex-row items-center gap-[10px] flex-wrap dark:text-white text-white">
          </ul>
        </div>
        <input type="hidden" name="tags" id="tagsInput" />
        <span id="tagsError" class="text-red-500 hidden">At least one tag is required</span>
  
        <button type="submit" class="w-full md:w-auto px-5 py-3 text-base text-white transition duration-300 ease-in-out border rounded-md cursor-pointer border-primary bg-primary hover:bg-blue-dark">Create</button>
      </form>
    </div>
  </section>
  <!-- ====== CreateBlog Section End -->

  <!-- ====== Footer Section Start -->
  <%- include('partials/footer') %>
  <!-- ====== Footer Section End -->

  <!-- ====== Back To Top Start -->
  <a href="javascript:void(0)"
    class="back-to-top fixed bottom-8 right-8 left-auto z-[999] hidden h-10 w-10 items-center justify-center rounded-md bg-primary text-white shadow-md transition duration-300 ease-in-out hover:bg-dark">
    <span class="mt-[6px] h-3 w-3 rotate-45 border-t border-l border-white"></span>
  </a>
  <!-- ====== Back To Top End -->

  <!-- ====== Made With Button Start -->
  <a target="_blank" rel="nofollow noopener"
    class="inline-flex items-center gap-[10px] py-2 px-[14px] rounded-lg bg-white dark:bg-dark-2 shadow-2 fixed bottom-8 left-4 sm:left-9 z-[999]"
    href="https://tailgrids.com/">
    <span class="text-base font-medium text-dark-3 dark:text-dark-6">
      Made with
    </span>
    <span class="block w-px h-4 bg-stroke dark:bg-dark-3"></span>
    <span class="block max-w-[88px] w-full">
      <img src="/images/brands/tailgrids.svg" alt="tailgrids" class="dark:hidden">
      <img src="/images/brands/tailgrids-white.svg" alt="tailgrids" class="hidden dark:block">
    </span>
  </a>
  <!-- ====== Made With Button End -->

  <!-- ====== All Scripts -->
  <script src="/js/main.js"></script>

  <!-- init CKEditor-->
  <script>
    ClassicEditor
      .create(document.querySelector('#editor'), {
        ckfinder: {
          uploadUrl: '/upload'
        },
        toolbar: {
          items: [
            'heading', '|',
            'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',
            'outdent', 'indent', '|',
            'imageUpload', 'blockQuote', 'insertTable', 'mediaEmbed', '|',
            'undo', 'redo'
          ]
        },
        image: {
          toolbar: [
            'imageTextAlternative', 'imageStyle:full', 'imageStyle:side'
          ]
        },
        table: {
          contentToolbar: [
            'tableColumn', 'tableRow', 'mergeTableCells'
          ]
        },
        language: 'en'
      })
      .then(editor => {
        editor.ui.view.element.classList.add('blog-editor');
        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
          return {
            upload: () => {
              return loader.file
                .then(file => new Promise((resolve, reject) => {
                  const data = new FormData();
                  data.append('upload', file);
  
                  fetch('/upload', {
                    method: 'POST',
                    body: data
                  })
                  .then(response => response.json())
                  .then(result => {
                    if (result.error) {
                      console.error('Error uploading file:', result.error);
                      reject(result.error);
                    } else {
                      console.log('File uploaded successfully:', result.url);
                      resolve({
                        default: result.url
                      });
                    }
                  })
                  .catch(error => {
                    console.error('Error uploading file:', error);
                    reject(error);
                  });
                }));
            }
          };
        };
      })
      .catch(error => {
        console.error('Error initializing the editor:', error);
        alert('Error initializing the editor: ' + error.message);
      });
  </script>
  <!-- Add and remove tags -->
  <script>
    function previewImage(event) {
      const input = event.target;
      const reader = new FileReader();
      reader.onload = function() {
        const imagePreview = document.getElementById('imagePreview');
        imagePreview.src = reader.result;
        imagePreview.classList.remove('hidden');
      };
      reader.readAsDataURL(input.files[0]);
    }

    document.getElementById('tagInput').addEventListener('keypress', function (e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        addTag();
      }
    });
  
    function addTag() {
      const tagInput = document.getElementById('tagInput');
      const tagList = document.getElementById('tagList');
      const tagsInput = document.getElementById('tagsInput');
  
      if (tagInput.value.trim() !== '') {
        const li = document.createElement('li');
        li.classList.add('pl-3', 'h-10', 'text-dark-700', 'dark:text-white', 'bg-primary', 'rounded');
        li.textContent = tagInput.value.trim();
        li.innerHTML += '<button type="button" onclick="removeTag(this)" class="ml-2 px-2 bg-gray-700 h-full text-white rounded-e">x</button>';
        tagList.appendChild(li);
  
        updateTagsInput();
        tagInput.value = '';
      }
    }
  
    function removeTag(button) {
      const li = button.parentElement;
      li.remove();
      updateTagsInput();
    }
  
    function updateTagsInput() {
      const tagList = document.getElementById('tagList');
      const tagsInput = document.getElementById('tagsInput');
      const tags = [];
  
      tagList.querySelectorAll('li').forEach(li => {
        tags.push(li.textContent.replace(' Remove', ''));
      });
  
      tagsInput.value = tags.join(',');
    }
  </script>
  <!-- Ajax -->
  <script>
    $(document).ready(function() {
      $('#createForm').on('submit', function(event) {
        event.preventDefault(); // Ngăn chặn form submit mặc định


        // Lấy giá trị của các thẻ từ #tagList
        const tags = [];
        $('#tagList li').each(function() {
          tags.push($(this).text().replace('x', '').trim());
        });

        // Gán giá trị mảng thẻ cho #tagsInput
        $('#tagsInput').val(tags.join(','));
        console.log($('#tagsInput').val());

        var formData = new FormData(this);

        // Log tất cả các cặp key-value trong FormData
        for (var pair of formData.entries()) {
          console.log(pair[0] + ': ' + pair[1]);
        }


        $.ajax({
          url: '/blog-create',
          type: 'POST',
          data: formData,
          contentType: false,
          processData: false,
          success: function(response) {
            // Xử lý khi thành công
          Swal.fire({
          icon: 'success',
          title: 'Success',
          text: response.success_msg,
          customClass: {
            popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
            title: 'text-[#1a202c] dark:text-gray-100',
            confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
            cancelButton: 'bg-[#e53e3e] text-white dark:bg-green-600'
          }
          }).then(() => {
              window.location.href = '/blogs'; // Chuyển hướng sau khi thành công
            });
          },
          error: function(xhr) {
            const errors = xhr.responseJSON.errors;
            let errorList = '<ul class="error-list mb-4">';
            
            if (Array.isArray(errors)) {
              errors.forEach(function(error) {
                errorList += `<li class="error-item text-red-500 dark:text-red-300">${error.msg}</li>`;
              });
            } else {
              errorList += `<li class="error-item text-red-500 dark:text-red-300">An unexpected error occurred.</li>`;
            }
          
          errorList += '</ul>';

            Swal.fire({
            icon: 'error',
            title: 'Oops...',
            html: errorList,
            customClass: {
              popup: 'bg-[#F4F7FF] dark:bg-gray-800 text-[#333] dark:text-gray-200',
              title: 'text-[#1a202c] dark:text-gray-100',
              confirmButton: 'bg-[#1a202c] text-white dark:bg-gray-700',
              cancelButton: 'bg-[#e53e3e] text-white dark:bg-red-600'
              }
            });
          }
        });
      });
    });
  </script>
</body>

</html>