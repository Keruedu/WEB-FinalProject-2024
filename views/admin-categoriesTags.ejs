<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= title %>
  </title>
  <link rel="shortcut icon" href="/images/favicon.png" type="image/x-icon" />
  <link rel="stylesheet" href="/css/animate.css" />
  <link rel="stylesheet" href="/css/tailwind.css" />
  <script src="/js/wow.min.js"></script>
  <script src="/js/main.js"></script>
  <script>
    new WOW().init();
  </script>
</head>

<body>
  <%- include('partials/navbar') %>

  <!-- Modal Input -->
  <div id="inputModal" class="hidden fixed inset-0 bg-black bg-opacity-50 items-center justify-center z-50">
    <div class="bg-white dark:bg-dark-2 rounded-lg shadow-xl p-6 w-96">
      <div class="mb-4">
        <h3 id="modalTitle" class="text-xl font-semibold text-dark dark:text-white"></h3>
      </div>
      <input 
        type="text" 
        id="modalInput"
        class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary dark:bg-dark-3 dark:border-dark-3 dark:text-white"
        placeholder="Enter name..."
      >
      <div class="flex justify-end gap-3 mt-4">
        <button 
          onclick="closeModal()"
          class="px-4 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-dark-3 rounded-lg transition-colors"
        >
          Cancel
        </button>
        <button 
          onclick="submitModal()"
          class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors"
        >
          Add
        </button>
      </div>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="deleteModal" class="hidden fixed inset-0 bg-black bg-opacity-50 items-center justify-center z-50">
    <div class="bg-white dark:bg-dark-2 rounded-lg shadow-xl p-6 w-96">
      <h3 class="text-xl font-semibold text-dark dark:text-white mb-4">Confirm Delete</h3>
      <p class="text-gray-600 dark:text-gray-400 mb-6">
        Are you sure you want to delete "<span id="deleteItemName" class="font-medium"></span>"?
      </p>
      <div class="flex justify-end gap-3">
        <button onclick="closeDeleteModal()" 
                class="px-4 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-dark-3 rounded-lg transition-colors">
          Cancel
        </button>
        <button onclick="confirmDelete()" 
                class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors">
          Delete
        </button>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <section class="pt-[150px] pb-[120px] dark:bg-dark dark:text-white">
    <div class="container px-4 mx-auto">
      <div class="wow fadeInUp" data-wow-delay=".2s">
        <!-- Back button -->
        <div class="mb-6 flex items-center space-x-2">
          <a href="/admin" 
             class="inline-flex items-center p-1 hover:bg-gray-100 dark:hover:bg-dark-4 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
            </svg>
            <span class="ml-2 text-gray-700 dark:text-gray-300 text-lg">
              Back to Dashboard
            </span>
          </a>
        </div>

        <!-- Header -->
        <div class="mb-12 text-center ">
          <h2 class="text-3xl font-bold sm:text-4xl md:text-[40px]">
            Categories & Tags Management
          </h2>
        </div>
        <input type="text" id="modalInput"
          class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary dark:bg-dark-3 dark:border-dark-3 dark:text-white"
          placeholder="Enter name...">
        <div class="flex justify-end gap-3 mt-4 dark:bg-dark dark:text-white">
          <button onclick="closeModal()"
            class="px-4 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-dark-3 rounded-lg transition-colors">
            Cancel
          </button>
          <button onclick="submitModal()"
            class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors">
            Add
          </button>
        </div>
      </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="hidden fixed inset-0 bg-black bg-opacity-50 items-center justify-center z-50">
      <div class="bg-white dark:bg-dark-2 rounded-lg shadow-xl p-6 w-96">
        <h3 class="text-xl font-semibold text-dark dark:text-white mb-4">Confirm Delete</h3>
        <p class="text-gray-600 dark:text-gray-400 mb-6">
          Are you sure you want to delete "<span id="deleteItemName" class="font-medium"></span>"?
        </p>
        <div class="flex justify-end gap-3">
          <button onclick="closeDeleteModal()"
            class="px-4 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-dark-3 rounded-lg transition-colors">
            Cancel
          </button>
          <button onclick="confirmDelete()"
            class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors">
            Delete
          </button>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <section class="pt-[150px] pb-[120px] dark:bg-dark dark:text-white">
      <div class="container px-4 mx-auto">
        <div class="wow fadeInUp" data-wow-delay=".2s">
          <!-- Header -->
          <div class="mb-12 text-center">
            <h2 class="text-3xl font-bold text-dark dark:text-white sm:text-4xl md:text-[40px]">
              Categories & Tags Management
            </h2>
          </div>

          <!-- Categories Section -->
          <div class="mb-12 bg-white dark:bg-dark-2 rounded-lg shadow-md border-2 border-gray-200 dark:border-dark-3">
            <div class="flex justify-between items-center p-6 cursor-pointer" onclick="toggleSection('categories')">
              <div class="flex items-center space-x-4">
                <div class="flex items-center">
                  <h3 class="text-2xl font-semibold text-dark dark:text-white">Categories</h3>
                  <span class="ml-3 text-sm text-gray-500">(<%= categoriesCount %> total)</span>
                </div>
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path id="categories-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M9 5l7 7-7 7" />
                </svg>
              </div>
              <button onclick="event.stopPropagation(); showModal('category')"
                class="inline-flex items-center justify-center hover:bg-gray-100 dark:hover:bg-dark-3 p-2 rounded-lg">
                <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
              </button>
            </div>

            <div id="categories-section" class="hidden px-6 pb-8">
              <div class="grid grid-cols-1 gap-4 mb-4">
                <% categories.forEach(category=> { %>
                  <div onclick="togglePostsList('category-<%= category._id %>')" class="border-2 border-gray-200 dark:border-dark-3 rounded-lg p-4 hover:border-primary dark:hover:border-primary transition-colors cursor-pointer
                          <%= category.name === 'Uncategorized' ? 'mb-6' : '' %>">
                    <div class="flex justify-between items-center">
                      <div class="flex-grow">
                        <h4 class="font-medium text-dark dark:text-white">
                          <%= category.name %>
                        </h4>
                        <span class="text-sm text-gray-500">
                          <%= category.blogsCount %> blogs
                        </span>
                      </div>
                      <% if (category.name !=='Uncategorized' ) { %>
                        <button
                          onclick="event.stopPropagation(); deleteCategory('<%= category._id %>', '<%= category.name %>')"
                          class="text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 p-1 rounded ml-4">
                          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                          </svg>
                        </button>
                        <% } %>
                    </div>
                    <div id="category-<%= category._id %>"
                      class="hidden mt-4 pl-4 border-l-2 border-gray-200 dark:border-dark-3">
                      <% category.blogs.forEach(blog=> { %>
                        <a href="/blogs/<%= blog._id %>" onclick="event.stopPropagation()"
                          class="block py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-primary">
                          <%= blog.title %>
                        </a>
                        <% }) %>
                    </div>
                  </div>
                  <% }) %>
              </div>
            </div>
          </div>

          <!-- Tags Section -->
          <div class="mb-12 bg-white dark:bg-dark-2 rounded-lg shadow-md border-2 border-gray-200 dark:border-dark-3">
            <div class="flex justify-between items-center p-6 cursor-pointer" onclick="toggleSection('tags')">
              <div class="flex items-center space-x-4">
                <div class="flex items-center">
                  <h3 class="text-2xl font-semibold text-dark dark:text-white">Tags</h3>
                  <span class="ml-3 text-sm text-gray-500">(<%= tagsCount %> total)</span>
                </div>
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path id="tags-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M9 5l7 7-7 7" />
                </svg>
              </div>
              <button onclick="event.stopPropagation(); showModal('tag')"
                class="inline-flex items-center justify-center hover:bg-gray-100 dark:hover:bg-dark-3 p-2 rounded-lg">
                <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
              </button>
            </div>

            <div id="tags-section" class="hidden px-6 pb-8">
              <div class="grid grid-cols-1 gap-4 mb-4">
                <% tags.forEach((tag, index)=> { %>
                  <div onclick="togglePostsList('tag-<%= tag._id %>')" class="border-2 border-gray-200 dark:border-dark-3 rounded-lg p-4 hover:border-primary dark:hover:border-primary transition-colors cursor-pointer
                          <%= index < tags.length - 1 ? 'mb-2' : '' %>">
                    <div class="flex justify-between items-center">
                      <div class="flex-grow">
                        <h4 class="font-medium text-dark dark:text-white">
                          <%= tag.name %>
                        </h4>
                        <span class="text-sm text-gray-500">
                          <%= tag.blogsCount %> blogs
                        </span>
                      </div>
                      <button onclick="event.stopPropagation(); deleteTag('<%= tag._id %>', '<%= tag.name %>')"
                        class="text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 p-1 rounded ml-4">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                        </svg>
                      </button>
                    </div>
                    <!-- Danh sách blogs -->
                    <div id="tag-<%= tag._id %>" class="hidden mt-4 pl-4 border-l-2 border-gray-200 dark:border-dark-3">
                      <% tag.blogs.forEach(blog=> { %>
                        <a href="/blogs/<%= blog._id %>" onclick="event.stopPropagation()"
                          class="block py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-primary">
                          <%= blog.title %>
                        </a>
                        <% }) %>
                    </div>
                  </div>
                  <% }) %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- ====== Back To Top Start -->
    <a href="javascript:void(0)"
      class="back-to-top fixed bottom-8 right-8 left-auto z-[999] hidden h-10 w-10 items-center justify-center rounded-md bg-primary text-white shadow-md transition duration-300 ease-in-out hover:bg-dark">
      <span class="mt-[6px] h-3 w-3 rotate-45 border-t border-l border-white"></span>
    </a>
    <!-- ====== Back To Top End -->

    <%- include('partials/footer') %>
      <script src="/js/main.js"></script>
      <script>
        let currentModalType = '';
        let deleteItemId = '';
        let deleteItemType = '';
        let deleteItemName = '';
  
        function showModal(type) {
          currentModalType = type;
          const modal = document.getElementById('inputModal');
          modal.classList.remove('hidden');
          modal.classList.add('flex');
        }
  
        function closeModal() {
          const modal = document.getElementById('inputModal');
          modal.classList.remove('flex');
          modal.classList.add('hidden');
          document.getElementById('modalInput').value = '';
        }
  
        async function submitModal() {
          try {
            const name = document.getElementById('modalInput').value.trim();
            if (!name) return;
  
            const endpoint = currentModalType === 'category' ? 'categories' : 'tags';
            const response = await fetch(`/api/${endpoint}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify({ name })
            });
  
            if (!response.ok) {
              throw new Error('Failed to create');
            }
  
            const result = await response.json();
  
            if (result.success) {
              closeModal();
              location.reload();
            } else {
              throw new Error(result.message || 'Failed to create');
            }
  
          } catch (error) {
            console.error('Error:', error);
            alert('Failed to create ' + currentModalType + '. Please try again.');
          }
        }
  
        // Thêm event listener cho phím Enter
        document.getElementById('modalInput').addEventListener('keypress', function (e) {
          if (e.key === 'Enter') {
            submitModal();
          }
        });
  
        function togglePostsList(id) {
          const element = document.getElementById(id);
          element.classList.toggle('hidden');
        }
  
        function toggleSection(section) {
          const content = document.getElementById(`${section}-section`);
          const icon = document.getElementById(`${section}-icon`);
          content.classList.toggle('hidden');
          icon.setAttribute('d', content.classList.contains('hidden')
            ? 'M9 5l7 7-7 7'
            : 'M19 9l-7 7-7-7'
          );
        }
  
        function showDeleteModal(type, id, name) {
          deleteItemId = id;
          deleteItemType = type;
          deleteItemName = name;
          document.getElementById('deleteItemName').textContent = name;
          const modal = document.getElementById('deleteModal');
          modal.classList.remove('hidden');
          modal.classList.add('flex');
        }
  
        function closeDeleteModal() {
          const modal = document.getElementById('deleteModal');
          modal.classList.remove('flex');
          modal.classList.add('hidden');
        }
  
        async function confirmDelete() {
          try {
            const endpoint = deleteItemType === 'category' ? 'categories' : 'tags';
            const response = await fetch(`/api/${endpoint}/${deleteItemId}`, {
              method: 'DELETE'
            });
  
            if (!response.ok) throw new Error('Failed to delete');
  
            location.reload();
          } catch (error) {
            console.error('Error:', error);
            closeDeleteModal();
            // Có thể thêm thông báo lỗi ở đây nếu cần
          }
        }
  
        function deleteCategory(id, name) {
          event.stopPropagation();
          showDeleteModal('category', id, name);
        }
  
        function deleteTag(id, name) {
          event.stopPropagation();
          showDeleteModal('tag', id, name);
        }
      </script>
</body>

</html>