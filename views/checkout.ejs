<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Pricing | Play Tailwind</title>
  <link rel="shortcut icon" href="/images/favicon.png" type="image/x-icon" />
  <link rel="stylesheet" href="/css/animate.css" />
  <link rel="stylesheet" href="/css/tailwind.css" />

  <!-- ==== WOW JS ==== -->
  <script src="/js/wow.min.js"></script>
  <script>
    new WOW().init();
  </script>
</head>

<body>
  <!-- ====== Navbar Section Start -->
  <%- include('partials/navbar') %>
  <!-- ====== Navbar Section End -->

  <!-- ====== Banner Section Start -->
  <div class="relative z-10 overflow-hidden pt-[120px] pb-[60px] md:pt-[130px] lg:pt-[160px] dark:bg-dark">
    <div
      class="absolute bottom-0 left-0 w-full h-px bg-gradient-to-r from-stroke/0 via-stroke dark:via-dark-3 to-stroke/0">
    </div>
    <div class="container">
      <div class="flex flex-wrap items-center -mx-4">
        <div class="w-full px-4">
          <div class="text-center">
            <h1 class="mb-4 text-3xl font-bold text-dark dark:text-white sm:text-4xl md:text-[40px] md:leading-[1.2]">
              Checkout Page</h1>
            <p class="mb-5 text-base text-body-color dark:text-dark-6">
              There are many variations of passages of Lorem Ipsum available.
            </p>

            <ul class="flex items-center justify-center gap-[10px]">
              <li>
                <a href="../index"
                  class="flex items-center gap-[10px] text-base font-medium text-dark dark:text-white">
                  Home
                </a>
              </li>
              <li>
                <a href="javascript:void(0)" class="flex items-center gap-[10px] text-base font-medium text-body-color">
                  <span class="text-body-color dark:text-dark-6"> / </span>
                  Checkout
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- ====== Banner Section End -->

  <!-- ====== Checkout Section Start -->
  <section id="pricing" class="relative z-20 overflow-hidden bg-white dark:bg-dark pt-20 pb-12 lg:pt-[120px] lg:pb-[90px]">
    <div class="w-full px-4 md:w-1/2 lg:w-1/3 mx-auto">
      <div class="relative z-10 px-8 py-10 mb-10 overflow-hidden bg-white rounded-xl dark:bg-dark-2 shadow-pricing sm:p-12 lg:py-10 lg:px-6 xl:p-14 flex flex-col justify-between h-full">
        <% if (plan.name === 'Premium') { %>
          <p class="absolute right-[-50px] top-[60px] inline-block -rotate-90 rounded-tl-md rounded-bl-md bg-primary py-2 px-5 text-base font-medium text-white">
            Recommended
          </p>
        <% } %>
        <div>
          <span class="block mb-5 text-xl font-medium text-dark dark:text-white">
            <%= plan.name %>
          </span>
          <h2 class="mb-11 text-4xl font-semibold text-dark dark:text-white xl:leading-[1.21] xl:text-[42px]">
            <span class="text-xl font-medium">$</span>
            <span class="-ml-1 -tracking-[2px]"><%= plan.price.toFixed(2) %></span>
            <span class="text-base font-normal text-body-color dark:text-dark-6">
              Per <%= plan.billingCycle %>
            </span>
          </h2>
          <div class="mb-[50px]">
            <h5 class="mb-5 text-lg font-medium text-dark dark:text-white">Features</h5>
            <div class="flex flex-col gap-[14px]">
              <% plan.features.forEach(feature => { %>
                <p class="text-base text-body-color dark:text-dark-6">
                  <%= feature %>
                </p>
              <% }) %>
            </div>
          </div>
        </div>
        <div class="flex flex-col gap-4">
          <div class="flex flex-col gap-2">
            <label for="quantity" class="text-base font-medium text-dark dark:text-white">Quantity</label>
            <input type="number" id="quantity" name="quantity" value="1" min="1" class="w-full px-4 py-2 border rounded-md dark:bg-dark-3 dark:border-dark-4 dark:text-white">
          </div>
          <div class="flex flex-col gap-2">
            <label for="totalPrice" class="text-base font-medium text-dark dark:text-white">Total Price</label>
            <input type="text" id="totalPrice" name="totalPrice" value="<%= plan.price.toFixed(2) %>" readonly class="w-full px-4 py-2 border rounded-md dark:bg-dark-3 dark:border-dark-4 dark:text-white">
          </div>
          <a id="momoPaymentButton" href="#" class="inline-block py-3 text-base font-medium text-center text-white transition rounded-md bg-primary px-7 hover:bg-blue-dark mt-auto">
            Pay with MoMo
          </a>
          <a id="vnpayPaymentButton" href="#" class="inline-block py-3 text-base font-medium text-center text-white transition rounded-md bg-primary px-7 hover:bg-blue-dark mt-auto">
            Pay with VNPay
          </a>          
        </div>
      </div>
    </div>
  </section>
  <!-- ====== Checkout Section End -->

  <!-- ====== Footer Section Start -->
  <%- include('partials/footer') %>
  <!-- ====== Footer Section End -->

  <!-- ====== Back To Top Start -->
  <a href="javascript:void(0)"
    class="back-to-top fixed bottom-8 right-8 left-auto z-[999] hidden h-10 w-10 items-center justify-center rounded-md bg-primary text-white shadow-md transition duration-300 ease-in-out hover:bg-dark">
    <span class="mt-[6px] h-3 w-3 rotate-45 border-t border-l border-white"></span>
  </a>
  <!-- ====== Back To Top End -->

  <!-- ====== Made With Button Start -->
  <!-- <a target="_blank" rel="nofollow noopener"
    class="inline-flex items-center gap-[10px] py-2 px-[14px] rounded-lg bg-white dark:bg-dark-2 shadow-2 fixed bottom-8 left-4 sm:left-9 z-[999]"
    href="https://tailgrids.com/">
    <span class="text-base font-medium text-dark-3 dark:text-dark-6">
      Made with
    </span>
    <span class="block w-px h-4 bg-stroke dark:bg-dark-3"></span>
    <span class="block max-w-[88px] w-full">
      <img src="/images/brands/tailgrids.svg" alt="tailgrids" class="dark:hidden">
      <img src="/images/brands/tailgrids-white.svg" alt="tailgrids" class="hidden dark:block">
    </span>
  </a> -->
  <!-- ====== Made With Button End -->

  <!-- ====== All Scripts -->
  <script src="/js/main.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const quantityInput = document.getElementById('quantity');
      const totalPriceInput = document.getElementById('totalPrice');
      const planPrice = <%= plan.price %>;
      
      quantityInput.addEventListener('input', function() {
        const quantity = parseInt(quantityInput.value, 10) || 0;
        const totalPrice = (quantity * planPrice).toFixed(2);
        totalPriceInput.value = totalPrice; 
        console.log(totalPrice);
      });
    });
  </script>
  <script>
    document.getElementById('momoPaymentButton').addEventListener('click', async function() {
      const amount = parseFloat(document.getElementById('totalPrice').value);
      const orderId = 'order_' + new Date().getTime();
      const orderInfo = 'Payment for order ' + orderId;
      const subscriptionPlanId = '<%= plan._id %>'; // Assuming plan ID is available in the template
      const quantity = parseInt(document.getElementById('quantity').value, 10);

      try {
        const response = await fetch('/momo', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ amount, orderId, orderInfo, subscriptionPlanId, quantity })
        });

        const data = await response.json();
        if (data.payUrl) {
          window.location.href = data.payUrl;
        } else {
          alert('Failed to create MoMo payment');
        }
      } catch (error) {
        console.error('Error creating MoMo payment:', error);
        alert('Error creating MoMo payment');
      }
    });

    document.getElementById('vnpayPaymentButton').addEventListener('click', async function() {
      const amount = parseFloat(document.getElementById('totalPrice').value);
      const orderId = 'order_' + new Date().getTime();
      const orderInfo = 'Payment for order ' + orderId;
      const subscriptionPlanId = '<%= plan._id %>'; // Assuming plan ID is available in the template
      const quantity = parseInt(document.getElementById('quantity').value, 10);

      try {
        const response = await fetch('/vnpay', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ amount, orderId, orderInfo, subscriptionPlanId, quantity })
        });

        const data = await response.json();
        if (data.payUrl) {
          window.location.href = data.payUrl;
        } else {
          alert('Failed to create VNPay payment');
        }
      } catch (error) {
        console.error('Error creating VNPay payment:', error);
        alert('Error creating VNPay payment');
      }
    });
  </script>
</body>

</html>